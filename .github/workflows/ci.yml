name: Node.js CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 18.x
        uses: actions/setup-node@v2
        with:
          node-version: "18.x"
      - name: Docker build
        run: |
          echo ${{ secrets.DOCKER_HUB_PW }} | docker login -u ${{ secrets.DOCKER_HUB_ID }} --password-stdin
          docker build --platform linux/amd64 -t community-server .
          docker tag community-server ${{ secrets.DOCKER_HUB_ID }}/community-server:latest
          docker push ${{ secrets.DOCKER_HUB_ID }}/community-server:latest

  mysql:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.3.0
      - name: Deploy Docker container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            echo ${{ secrets.DOCKER_HUB_PW }} | sudo docker login -u ${{ secrets.DOCKER_HUB_ID }} --password-stdin
            if [ ! "$(sudo docker ps -q -f name=community-mysql)" ]; then
            if [ "$(sudo docker ps -aq -f status=exited -f name=community-mysql)" ]; then
              sudo docker rm community-mysql
            fi
              sudo docker-compose up -d community-mysql
            fi

  deploy:
    needs: mysql
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3.3.0
      - name: Deploy Docker container
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            echo ${{ secrets.DOCKER_HUB_PW }} | sudo docker login -u ${{ secrets.DOCKER_HUB_ID }} --password-stdin
            sudo docker pull ${{ secrets.DOCKER_HUB_ID }}/community-server:latest
            sudo docker stop community-server || true
            sudo docker rm community-server || true
            sudo docker run -d --name community-server -p 8000:8000 ${{ secrets.DOCKER_HUB_ID }}/community-server:latest
