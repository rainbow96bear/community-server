FROM node:18-alpine

# ARG로 환경 변수를 받음
ARG COMMUNITY_URL
ARG DB_USERNAME
ARG DB_PASSWORD
ARG DB_DBNAME
ARG DB_HOST
ARG PRODUCT_DB_HOST
ARG DB_PORT
ARG PORT
ARG SESSION_SECRET
ARG IMG_SERVER_URL

# 환경 변수를 설정
ENV COMMUNITY_URL=$COMMUNITY_URL
ENV DB_USERNAME=$DB_USERNAME
ENV DB_PASSWORD=$DB_PASSWORD
ENV DB_DBNAME=$DB_DBNAME
ENV DB_HOST=$DB_HOST
ENV PRODUCT_DB_HOST=$PRODUCT_DB_HOST
ENV DB_PORT=$DB_PORT
ENV PORT=$PORT
ENV SESSION_SECRET=$SESSION_SECRET
ENV IMG_SERVER_URL=$IMG_SERVER_URL

# 작업 디렉토리 생성 및 설정
RUN mkdir /community-server
WORKDIR /community-server

# .env 파일 생성
RUN echo "COMMUNITY_URL=${COMMUNITY_URL}" > .env && \
    echo "DB_USERNAME=${DB_USERNAME}" >> .env && \
    echo "DB_PASSWORD=${DB_PASSWORD}" >> .env && \
    echo "DB_DBNAME=${DB_DBNAME}" >> .env && \
    echo "DB_HOST=${DB_HOST}" >> .env && \
    echo "PRODUCT_DB_HOST=${PRODUCT_DB_HOST}" >> .env && \
    echo "DB_PORT=${DB_PORT}" >> .env && \
    echo "PORT=${PORT}" >> .env && \
    echo "SESSION_SECRET=${SESSION_SECRET}" >> .env && \
    echo "IMG_SERVER_URL=${IMG_SERVER_URL}" >> .env

# 패키지 설치 및 애플리케이션 복사
COPY ./package.json ./
RUN yarn install --no-cache
COPY . .

# wait 도구 추가 및 권한 설정
ADD https://github.com/ufoscout/docker-compose-wait/releases/download/2.2.1/wait /wait
RUN chmod +x /wait

# 애플리케이션 시작
CMD /wait && yarn start
